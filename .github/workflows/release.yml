name: release

on:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  all-go:
    name: all systems go
    runs-on: ubuntu-latest
    needs:
      - verify-version
      - publish-coverage
      - publish-npm
    steps:
      - run: exit 0

  verify-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Release Version
        id: get_release_version
        run: |
          RELEASE_VERSION=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "Release Version: $RELEASE_VERSION"

      - name: Get Package.json Version
        id: get_package_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "Package.json Version: $PACKAGE_VERSION"

      - name: Verify Versions Match
        run: |
          if [ "$RELEASE_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "::error::Version mismatch! GitHub release version ($RELEASE_VERSION) does not match package.json version ($PACKAGE_VERSION)"
            exit 1
          else
            echo "âœ… Versions match! GitHub release version ($RELEASE_VERSION) matches package.json version ($PACKAGE_VERSION)"
          fi

  publish-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests With Coverage Report
        run: npm run test-ci

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          fail_ci_if_error: true
          files: ./coverage/lcov.info
          verbose: true

  publish-npm:
    runs-on: ubuntu-latest
    needs:
      - verify-version
      - publish-coverage
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Publish Package To NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}